!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),function(){function e(){const e=function(){const e=document.querySelector("#ImaticPersistentBugnoteText");if(null!=e)return JSON.parse(e.dataset.settings)}();if(null!==e){const t=e.issue_id,n=e.user_id,o=document.querySelector("#bugnote_text");if(null!==o){const e=function(e,t){const n="ImaticPersistentBugnoteText_"+e+"_"+t,o=localStorage.getItem(n);return null===o?null:decodeURIComponent(o)}(t,n);null!==e&&(o.value=e),o.addEventListener("input",(function(){!function(e,t,n){const o="ImaticPersistentBugnoteText_"+e+"_"+t,r=encodeURIComponent(n);localStorage.setItem(o,r)}(t,n,o.value)}));const r=document.querySelector("#bugnoteadd");null!==r&&r.addEventListener("submit",(function(){!function(e,t){const n="ImaticPersistentBugnoteText_"+e+"_"+t;localStorage.removeItem(n)}(t,n)}))}}}document.addEventListener("DOMContentLoaded",(function(){e()}))}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,